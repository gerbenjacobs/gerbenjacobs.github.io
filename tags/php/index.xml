<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on Gerben Jacobs</title>
    <link>https://blog.gerbenjacobs.nl/tags/php/</link>
    <description>Recent content in Php on Gerben Jacobs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Nov 2022 00:22:35 +0100</lastBuildDate>
    <atom:link href="https://blog.gerbenjacobs.nl/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quickly create an empty stdClass object in PHP</title>
      <link>https://blog.gerbenjacobs.nl/quickly-create-an-empty-stdclass-object-in-php/</link>
      <pubDate>Fri, 19 Apr 2013 12:00:00 +0000</pubDate>
      <guid>https://blog.gerbenjacobs.nl/quickly-create-an-empty-stdclass-object-in-php/</guid>
      <description>&lt;p&gt;&#xA;    I was working on a Laravel project and had to work with a &lt;a title=&#34;Eloquent ORM docs&#34; href=&#34;https://laravel.com/docs/database/eloquent&#34; &gt;Eloquent ORM&lt;/a&gt; object;&#xA;    I then needed to create an empty stdClass object.&#xA;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&#xA;    There&#39;s a chance that a person is not known and being lazy I wanted to fill the form anyway with my Person object, so I needed a mockup of that object.&#xA;&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$person &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;object&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;array_fill_keys&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;firstname&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lastname&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;email&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;photo&amp;#39;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&#xA;    I&#39;d say &lt;a href=&#34;https://gist.github.com/gerbenjacobs/5525165&#34; title=&#34;Create an empty stdClass object Gist&#34; &gt;this solution&lt;/a&gt; is quick and dirty.. but frankly,&#xA;    it&#39;s not that dirty at all!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get IP range by CIDR notation</title>
      <link>https://blog.gerbenjacobs.nl/get-ip-range-by-cidr-notation/</link>
      <pubDate>Wed, 21 Nov 2012 12:00:00 +0000</pubDate>
      <guid>https://blog.gerbenjacobs.nl/get-ip-range-by-cidr-notation/</guid>
      <description>&lt;p&gt;&#xA;    I wanted to get the IPv4 range of a WHOIS record provided by&#xA;    &lt;a title=&#34;Latin America and Caribbean Internet Address Registry&#34; href=&#34;http://www.lacnic.net/en/web/lacnic/inicio&#34; &gt;LACNIC&lt;/a&gt;,&#xA;    because unlike other &lt;a title=&#34;Regional Internet Registries&#34; href=&#34;https://en.wikipedia.org/wiki/Regional_Internet_registry&#34; &gt;RIRs&lt;/a&gt;&#xA;    they don&#39;t supply you with the range, but with just&#xA;    a &lt;a title=&#34;Classless Inter-Domain Routing on Wikipedia&#34; href=&#34;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&#34; &gt;CIDR notation&lt;/a&gt;.&#xA;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&#xA;    To make matters worse, they give &#39;incomplete&#39; net numbers. The only working &#34;CIDR to IP range&#34; function I could find didn&#39;t accept it, so I had to sprinkle some &lt;em&gt;magic&lt;/em&gt;.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Perfect separator for Shoutcast 7.html file</title>
      <link>https://blog.gerbenjacobs.nl/perfect-separator-for-shoutcast-7.html-file/</link>
      <pubDate>Sun, 08 Apr 2012 12:00:00 +0000</pubDate>
      <guid>https://blog.gerbenjacobs.nl/perfect-separator-for-shoutcast-7.html-file/</guid>
      <description>&lt;p&gt;&#xA;    To go along nicely with &lt;a href=&#34;{% post_url 2012-04-07-add-ip-address-to-shoutcast-rip %}&#34;&gt;my previous Shoutcast tip&lt;/a&gt;,&#xA;    here is a trick to separate the data in the Shoutcast 7.html for displaying.&#xA;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&#xA;    If you, like me, use the &lt;em&gt;Shoutcast 7.html trick&lt;/em&gt; to get some quick stats about your stream broadcast&#xA;    but are getting some inconsistencies with parsing the comma-separated input you get, try this:&#xA;&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt; $data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;preg_split&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/[,]+/&amp;#34;&lt;/span&gt;, $string, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&#xA;    A possible outcome would be this:&#xA;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;192&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Woe, Is Me - Hell, or High Water&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&#xA;    If you were to &lt;code&gt;explode()&lt;/code&gt; this string, you&#39;d get the artist in 2 nodes and with this song title you&#39;d get that one in 2 nodes as well.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to programmatically add an IP address to a Shoutcast Reserved IP list in PHP</title>
      <link>https://blog.gerbenjacobs.nl/how-to-programmatically-add-an-ip-address-to-a-shoutcast-reserved-ip-list-in-php/</link>
      <pubDate>Sat, 07 Apr 2012 12:00:00 +0000</pubDate>
      <guid>https://blog.gerbenjacobs.nl/how-to-programmatically-add-an-ip-address-to-a-shoutcast-reserved-ip-list-in-php/</guid>
      <description>&lt;p&gt;&#xA;    Pretty semantic title, huh? But that&#39;s basically what this is all about.&#xA;&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;figure &#34;&gt;&#xA;    &#xA;        &lt;img loading=&#34;lazy&#34; class=&#34;figure-img img-fluid rounded&#34; src=https://blog.gerbenjacobs.nl/img/blog/2012/shoutcast.gif alt=Shoutcast&amp;#32;logo&gt;&#xA;    &#xA;&#xA;    &lt;figcaption class=&#34;figure-caption&#34;&gt;Shoutcast logo&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;&#xA;    If you have a Shoutcast host that is set to private, only people whose IP address in the RIP list (Reserved IP) can access your stream.&#xA;    &lt;br&gt;A lot of free Shoutcast server providers do this, to make it a bit less profitable to free ride their services.&#xA;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&#xA;    Let&#39;s have a quick look at the code and then analyze it to understand what it&#39;s doing.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>array_push_insert: Push new value into array with PHP</title>
      <link>https://blog.gerbenjacobs.nl/array_push_insert-push-new-value-into-array-with-php/</link>
      <pubDate>Thu, 19 May 2011 12:00:00 +0000</pubDate>
      <guid>https://blog.gerbenjacobs.nl/array_push_insert-push-new-value-into-array-with-php/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;    This blogpost is for historical purposes.&#xA;    There is a better way with &lt;a&#xA;        href=&#34;https://www.php.net/manual/en/function.array-splice.php&#34;&gt;array_splice&lt;/a&gt;.&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&#xA;    At work today, my colleague needed to add, or rather &#39;insert&#39;, a value into an existing array &lt;em&gt;AND&lt;/em&gt; on a&#xA;    specific index.&#xA;    This because we fed it into a JS table sorter, once we pulled it through &lt;code&gt;json_encode()&lt;/code&gt;.&#xA;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So what we really required: &lt;strong&gt;&lt;code&gt;array_push_insert&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&#xA;    We couldn&#39;t find any existing &lt;a href=&#34;https://www.php.net/manual/en/ref.array.php&#34;&gt;Array function&lt;/a&gt; at php.net,&#xA;    so&#xA;    I decided to make my own version.&#xA;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
