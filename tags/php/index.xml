<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>php on Gerben Jacobs</title><link>https://blog.gerbenjacobs.nl/tags/php/</link><description>Recent content in php on Gerben Jacobs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 19 Apr 2013 12:00:00 +0000</lastBuildDate><atom:link href="https://blog.gerbenjacobs.nl/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>Quickly create an empty stdClass object in PHP</title><link>https://blog.gerbenjacobs.nl/quickly-create-an-empty-stdclass-object-in-php/</link><pubDate>Fri, 19 Apr 2013 12:00:00 +0000</pubDate><guid>https://blog.gerbenjacobs.nl/quickly-create-an-empty-stdclass-object-in-php/</guid><description>I was working on a Laravel project and had to work with a Eloquent ORM object; I then needed to create an empty stdClass object. There's a chance that a person is not known and being lazy I wanted to fill the form anyway with my Person object, so I needed a mockup of that object. &amp;lt;?php $person = (object) array_fill_keys( array(&amp;#39;firstname&amp;#39;, &amp;#39;lastname&amp;#39;, &amp;#39;email&amp;#39;, &amp;#39;photo&amp;#39;), &amp;#39;&amp;#39; ); ?&amp;gt; I'd say this solution is quick and dirty.</description></item><item><title>Get IP range by CIDR notation</title><link>https://blog.gerbenjacobs.nl/get-ip-range-by-cidr-notation/</link><pubDate>Wed, 21 Nov 2012 12:00:00 +0000</pubDate><guid>https://blog.gerbenjacobs.nl/get-ip-range-by-cidr-notation/</guid><description>I wanted to get the IPv4 range of a WHOIS record provided by LACNIC, because unlike other RIRs they don't supply you with the range, but with just a CIDR notation. To make matters worse, they give 'incomplete' net numbers. The only working "CIDR to IP range" function I could find didn't accept it, so I had to sprinkle some magic. &amp;lt;?php $ipdata = explode(&amp;#39;/&amp;#39;, ltrim($incomplete_cidr_notation, &amp;#39;0&amp;#39;)); $dotcount = substr_count($ipdata[0], &amp;#39;.</description></item><item><title>Perfect separator for Shoutcast 7.html file</title><link>https://blog.gerbenjacobs.nl/perfect-separator-for-shoutcast-7.html-file/</link><pubDate>Sun, 08 Apr 2012 12:00:00 +0000</pubDate><guid>https://blog.gerbenjacobs.nl/perfect-separator-for-shoutcast-7.html-file/</guid><description>To go along nicely with my previous Shoutcast tip, here is a trick to separate the data in the Shoutcast 7.html for displaying. If you, like me, use the Shoutcast 7.html trick to get some quick stats about your stream broadcast but are getting some inconsistencies with parsing the comma-separated input you get, try this: &amp;lt;?php $data = preg_split(&amp;#34;/[,]+/&amp;#34;, $string, 7); ?&amp;gt; A possible outcome would be this: &amp;lt;?php Array ( [0] =&amp;gt; 1 [1] =&amp;gt; 1 [2] =&amp;gt; 1 [3] =&amp;gt; 1000 [4] =&amp;gt; 1 [5] =&amp;gt; 192 [6] =&amp;gt; &amp;#34;Woe, Is Me - Hell, or High Water&amp;#34; ) ?</description></item><item><title>How to programmatically add an IP address to a Shoutcast Reserved IP list in PHP</title><link>https://blog.gerbenjacobs.nl/how-to-programmatically-add-an-ip-address-to-a-shoutcast-reserved-ip-list-in-php/</link><pubDate>Sat, 07 Apr 2012 12:00:00 +0000</pubDate><guid>https://blog.gerbenjacobs.nl/how-to-programmatically-add-an-ip-address-to-a-shoutcast-reserved-ip-list-in-php/</guid><description>Pretty semantic title, huh? But that's basically what this is all about. Shoutcast logo If you have a Shoutcast host that is set to private, only people whose IP address in the RIP list (Reserved IP) can access your stream. A lot of free Shoutcast server providers do this, to make it a bit less profitable to free ride their services. Let's have a quick look at the code and then analyze it to understand what it's doing.</description></item><item><title>array_push_insert: Push new value into array with PHP</title><link>https://blog.gerbenjacobs.nl/array_push_insert-push-new-value-into-array-with-php/</link><pubDate>Thu, 19 May 2011 12:00:00 +0000</pubDate><guid>https://blog.gerbenjacobs.nl/array_push_insert-push-new-value-into-array-with-php/</guid><description>This blogpost is for historical purposes. There is a better way with array_splice. At work today, my colleague needed to add, or rather 'insert', a value into an existing array AND on a specific index. This because we fed it into a JS table sorter, once we pulled it through json_encode(). So what we really required: array_push_insert
We couldn't find any existing Array function at php.net, so I decided to make my own version.</description></item></channel></rss>