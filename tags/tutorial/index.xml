<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Gerben Jacobs</title>
    <link>https://blog.gerbenjacobs.nl/tags/tutorial/</link>
    <description>Recent content in Tutorial on Gerben Jacobs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Nov 2024 12:02:19 +0100</lastBuildDate>
    <atom:link href="https://blog.gerbenjacobs.nl/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Unix pipes with Go</title>
      <link>https://blog.gerbenjacobs.nl/using-unix-pipes-with-go/</link>
      <pubDate>Sun, 06 Oct 2024 12:00:00 +0200</pubDate>
      <guid>https://blog.gerbenjacobs.nl/using-unix-pipes-with-go/</guid>
      <description>&lt;p&gt;&lt;em&gt;Header by &lt;a href=&#34;https://www.flickr.com/photos/cogdog/6034711842/&#34;&gt;Alan Levine CC BY 2.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Go has made it easy to work with Unix operations, it comes with the platform-independent built-in package &lt;code&gt;os&lt;/code&gt; to interface with the operating system.&lt;/p&gt;&#xA;&lt;p&gt;They offer nice features such as &lt;code&gt;os.Stdin&lt;/code&gt; and &lt;code&gt;os.Stdout&lt;/code&gt;, wrappers of type &lt;code&gt;os.File&lt;/code&gt; around the OS&amp;rsquo;s common standard streams.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;os/exec&lt;/code&gt; package is also great. It allows you to run Unix-tools from within your Go application.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Package exec runs external commands. It wraps os.StartProcess to make it easier to remap stdin and stdout, connect I/O with pipes, and do other adjustments.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
